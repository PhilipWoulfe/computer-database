package com.excilys.formation.config;

<<<<<<< ac653dd57dad75a31805b9a73add2db81db21d2a
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;

import com.excilys.formation.service.implementation.UserServiceImpl;
=======
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;

import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint;
import org.springframework.security.web.authentication.www.DigestAuthenticationFilter;

import javax.annotation.Resource;
>>>>>>> [FEATURE] : Adds spring security with digest

@Configuration
@EnableWebSecurity
public class WebSecurityConfig extends WebSecurityConfigurerAdapter {
<<<<<<< ac653dd57dad75a31805b9a73add2db81db21d2a
    @Autowired
    private UserServiceImpl userDetailsService;
    
=======
    @Resource(name = "UserService")
    private UserDetailsService userDetailsService;

    @Override
    protected void configure(HttpSecurity http) throws Exception {

        DigestAuthenticationEntryPoint authenticationEntryPoint = new DigestAuthenticationEntryPoint();
        authenticationEntryPoint.setKey("cdb");
        authenticationEntryPoint.setRealmName("Authentication via Digest");
        authenticationEntryPoint.setNonceValiditySeconds(600);

        DigestAuthenticationFilter filter = new DigestAuthenticationFilter();
        filter.setAuthenticationEntryPoint(authenticationEntryPoint);
        filter.setUserDetailsService(userDetailsService());
        filter.setPasswordAlreadyEncoded(true);

        http.sessionManagement()
                .sessionCreationPolicy(SessionCreationPolicy.STATELESS)
                .and().addFilter(filter)
                .exceptionHandling()
                .authenticationEntryPoint(authenticationEntryPoint)
                .accessDeniedPage("/403")
                .and()
                    .csrf()
                        .disable()
                .authorizeRequests()
                    .antMatchers("/dashboard", "/register", "/login", "/resources/**")
                        .permitAll()
                    .antMatchers("/editComputer", "/addComputer", "/deleteComputer")
                        .authenticated();
    }

>>>>>>> [FEATURE] : Adds spring security with digest
    @Override
    protected void configure(AuthenticationManagerBuilder auth) throws Exception {
        auth.userDetailsService(userDetailsService);
    }
}